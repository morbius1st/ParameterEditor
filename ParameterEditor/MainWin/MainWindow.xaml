<Window Name="mainWindow" Title="View"
		x:Class="ParameterEditor.MainWin.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
		xmlns:custom="clr-namespace:ParameterEditor.WpfSupport"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:data="clr-namespace:ParameterEditor.Managers"
		xmlns:info="clr-namespace:ParameterEditor.Managers.ParameterInfo"
		xmlns:local="clr-namespace:ParameterEditor"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:support="clr-namespace:ParameterEditor.MainWin.MainWindowSupport"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		Width="1200"
		Height="800"
		FontSize="12"
		DataContext="{Binding ElementName=mainWindow}"
		Loaded="MainWindow_Loaded"
		mc:Ignorable="d"
		Background="#333333"
		>
	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../WpfSupport/GlobalResources.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<!--#region > definitions-->

			<sys:Double x:Key="FtSz">10</sys:Double>
			<FontFamily x:Key="FtFam">Arial</FontFamily>
			<FontStretch x:Key="FtStr">Normal</FontStretch>
			<FontStyle x:Key="FtSty">Normal</FontStyle>
			<FontWeight x:Key="Ftw">Normal</FontWeight>
			<SolidColorBrush x:Key="Ftb">Black</SolidColorBrush>

			<BooleanToVisibilityConverter x:Key="Bool2VisibilityConverter" />
			<support:RowToIndexConverter x:Key="RowToIndexConverter" />

			<x:Static x:Key="Pm"
					Member="data:ParameterMgr.ParamMgr"
					/>

			<!--#endregion-->

			<!--#region > styles-->

			<Style x:Key="VerticalLabel1"
					TargetType="Label"
					>
				<Setter Property="Foreground" Value="White" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="3,0,0,0" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>

			<Style x:Key="DgColHdrGripperStyle"
					TargetType="{x:Type Thumb}"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Cursor" Value="SizeWE" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Border
									Padding="{TemplateBinding Padding}"
									Background="{TemplateBinding Background}"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Width" Value="8" />
			</Style>

			<Style x:Key="DgColHdrStyle"
					TargetType="{x:Type DataGridColumnHeader}"
					>
				<Setter Property="ContentTemplate" Value="{DynamicResource DgHdrTemplate}" />
				<Setter Property="Height" Value="50" />
				<Setter Property="Margin" Value="3,1,3,1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
							<Grid Name="DgGridInner">
								<Themes:DataGridHeaderBorder
										Padding="{TemplateBinding Padding}"
										SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
										SortDirection="{TemplateBinding SortDirection}"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										SeparatorBrush="{TemplateBinding SeparatorBrush}"
										IsClickable="{TemplateBinding CanUserSort}"
										IsHovered="{TemplateBinding IsMouseOver}"
										IsPressed="{TemplateBinding IsPressed}"
										>
									<ContentPresenter
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											/>
								</Themes:DataGridHeaderBorder>
								<Thumb x:Name="PART_LeftHeaderGripper"
										HorizontalAlignment="Left"
										Style="{StaticResource DgColHdrGripperStyle}"
										/>
								<Thumb x:Name="PART_RightHeaderGripper"
										HorizontalAlignment="Right"
										Style="{StaticResource DgColHdrGripperStyle}"
										/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="VerticalAlignment" Value="Bottom" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
			</Style>

			<Style x:Key="DgRowHdrGripperStyle"
					TargetType="{x:Type Thumb}"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Cursor" Value="SizeNS" />
				<Setter Property="Height" Value="8" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Border
									Padding="{TemplateBinding Padding}"
									Background="{TemplateBinding Background}"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="row"
					TargetType="Control"
					>
				<Setter Property="Background" Value="Red" />
			</Style>

			<Style x:Key="DgRowHdrStyle"
					TargetType="{x:Type DataGridRowHeader}"
					>
				<Setter Property="ContentTemplate" Value="{DynamicResource RowHdrTemplate1}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
							<Grid>
								<Themes:DataGridHeaderBorder
										Padding="{TemplateBinding Padding}"
										Orientation="Horizontal"
										SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										SeparatorBrush="{TemplateBinding SeparatorBrush}"
										IsHovered="{TemplateBinding IsMouseOver}"
										IsPressed="{TemplateBinding IsPressed}"
										IsSelected="{TemplateBinding IsRowSelected}"
										>
									<StackPanel Orientation="Horizontal">
										<ContentPresenter
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												RecognizesAccessKey="True"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
												/>
										<Control Name="RowControl"
												SnapsToDevicePixels="false"
												Visibility="{Binding (Validation.HasError),
																						 Converter={StaticResource Bool2VisibilityConverter},
																						 RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
												Style="{StaticResource row}"
												Template="{Binding ValidationErrorTemplate,
																					 RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
												/>
									</StackPanel>
								</Themes:DataGridHeaderBorder>
								<Thumb x:Name="PART_TopHeaderGripper"
										VerticalAlignment="Top"
										Style="{StaticResource DgRowHdrGripperStyle}"
										/>
								<Thumb x:Name="PART_BottomHeaderGripper"
										VerticalAlignment="Bottom"
										Style="{StaticResource DgRowHdrGripperStyle}"
										/>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="DgRowStyle1"
					TargetType="{x:Type DataGridRow}"
					>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="SnapsToDevicePixels" Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridRow}">
							<Border x:Name="DGR_Border"
									SnapsToDevicePixels="True"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									>
								<SelectiveScrollingGrid>
									<SelectiveScrollingGrid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</SelectiveScrollingGrid.ColumnDefinitions>
									<SelectiveScrollingGrid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</SelectiveScrollingGrid.RowDefinitions>
									<DataGridCellsPresenter
											Grid.Column="1"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											ItemsPanel="{TemplateBinding ItemsPanel}"
											/>
									<DataGridDetailsPresenter
											Grid.Row="1"
											Grid.Column="1"
											SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
																																										 ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
																																										 Converter={x:Static DataGrid.RowDetailsScrollingConverter},
																																										 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
											Visibility="{TemplateBinding DetailsVisibility}"
											/>
									<DataGridRowHeader
											Grid.Row="0"
											Grid.RowSpan="2"
											Grid.Column="0"
											SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
											Visibility="{Binding HeadersVisibility,
																					 ConverterParameter={x:Static DataGridHeadersVisibility.Row},
																					 Converter={x:Static DataGrid.HeadersVisibilityConverter},
																					 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
											Style="{StaticResource DgRowHdrStyle}"
											/>
								</SelectiveScrollingGrid>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
				<Setter Property="ValidationErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<TextBlock
									Margin="2,0,0,0"
									VerticalAlignment="Center"
									Text="!"
									Foreground="Red"
									/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsNewItem" Value="True">
						<Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="DataGridCellStyle2"
					TargetType="{x:Type DataGridCell}"
					>
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="BorderBrush" Value="Transparent" />
				<Setter Property="BorderThickness" Value="1" />

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridCell}">
							<Border
									SnapsToDevicePixels="True"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									>
								<StackPanel Orientation="Vertical">
									<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</StackPanel>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsSelected" Value="True">
						<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
					</Trigger>
					<Trigger Property="IsKeyboardFocusWithin" Value="True">
						<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
					</Trigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsSelected" Value="true" />
							<Condition Property="Selector.IsSelectionActive" Value="false" />
						</MultiTrigger.Conditions>
						<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
						<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
					</MultiTrigger>
					<Trigger Property="IsEnabled" Value="false">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<!--#endregion-->


			<!--#region > control templates-->

			<ControlTemplate x:Key="VerticalLabel">
				<StackPanel
						Margin="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Orientation="Horizontal"
						Background="#1A1A1A"
						>
					<StackPanel.LayoutTransform>
						<TransformGroup>
							<RotateTransform Angle="-90" />
							<TranslateTransform />
						</TransformGroup>
					</StackPanel.LayoutTransform>
					<Label Content="{Binding (custom:CustomProperties.GenericStringOne), RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type Control}}}"
							Style="{StaticResource VerticalLabel1}"
							/>
					<Label Content="{Binding (custom:CustomProperties.GenericStringTwo), RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type Control}}}"
							Style="{StaticResource VerticalLabel1}"
							/>
				</StackPanel>
			</ControlTemplate>

			<!--#endregion-->


			<!--#region > data templates-->

			<DataTemplate x:Key="DgHdrTemplate"
					DataType="{x:Type info:ColumnSpec}"
					>
				<Grid>
					<TextBlock Name="DgHdrTxBlk"
							Margin="3,0,3,0"
							Width="60"
							VerticalAlignment="Bottom"
							FontFamily="{Binding HeaderFont.FontFamily,
																	 FallbackValue={StaticResource FtFam},
																	 Mode=OneWay}"
							FontSize="{Binding HeaderFont.FontSize,
																 FallbackValue={StaticResource FtSz},
																 Mode=OneWay}"
							FontStretch="{Binding HeaderFont.FontStretch,
																		FallbackValue={StaticResource FtStr},
																		Mode=OneWay}"
							FontStyle="{Binding HeaderFont.FontStyle,
																	FallbackValue={StaticResource FtSty},
																	Mode=OneWay}"
							FontWeight="{Binding HeaderFont.FontWeight,
																	 FallbackValue={StaticResource Ftw},
																	 Mode=OneWay}"
							Text="{Binding Path=ColumnTitle,
														 FallbackValue='None2',
														 Mode=OneWay}"
							TextWrapping="Wrap"
							Foreground="{Binding HeaderFont.Foreground,
																	 FallbackValue={StaticResource Ftb},
																	 Mode=OneWay}"
							/>
				</Grid>
			</DataTemplate>

			<DataTemplate x:Key="RowHdrTemplate1"
					DataType="{x:Type info:ParameterData}"
					>
				<Grid
						d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
																						 Type={x:Type DataGridRow}}"
						DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
																																 AncestorType={x:Type DataGridRow}}}"
						>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="30" />
						<ColumnDefinition Width="30" />
						<ColumnDefinition Width="60" />
					</Grid.ColumnDefinitions>
					<TextBlock
							Grid.Column="0"
							Text="{Binding Converter={StaticResource RowToIndexConverter}}"
							Foreground="Black"
							/>
					<CheckBox
							Grid.Column="1"
							IsChecked="{Binding Item.Selected,
																	FallbackValue='true',
																	Mode=TwoWay}"
							/>
					<TextBlock
							Grid.Column="2"
							Text="{Binding Item.TypeName,
														 FallbackValue='none',
														 Mode=OneWay}"
							/>

				</Grid>
			</DataTemplate>

			<!--#endregion-->


		</ResourceDictionary>

	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="100" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="20" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="{StaticResource SidebarWidth}" />
		</Grid.ColumnDefinitions>

		<Control
				Grid.Row="1"
				Grid.Column="0"
				Margin="0,0,0,5"
				custom:CustomProperties.GenericStringOne="info"
				custom:CustomProperties.GenericStringTwo="text box"
				Template="{DynamicResource VerticalLabel}"
				/>

		<Control
				Grid.Row="0"
				Grid.Column="0"
				Margin="{StaticResource GridBottomMargin}"
				custom:CustomProperties.GenericStringOne="Parameters for Family Type"
				custom:CustomProperties.GenericStringTwo="{Binding TypeName,
																													 FallbackValue='Text'}"
				Template="{DynamicResource VerticalLabel}"
				/>

		<!--  sidebar  -->
		<StackPanel
				Grid.Row="0"
				Grid.RowSpan="2"
				Grid.Column="2"
				Margin="15"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Bottom"
				Orientation="Vertical"
				>

			<Button Content="View Data"
					Margin="0,0,0,10"
					Height="{StaticResource BtnHeight}"
					Click="ButtonVueData_Click"
					/>
			<Button Content="View Debug"
					Margin="0,0,0,10"
					Height="{StaticResource BtnHeight}"
					Click="ButtonVueDebug_Click"
					/>
			<Button Content="Debug"
					Margin="0,0,0,10"
					Height="{StaticResource BtnHeight}"
					Click="ButtonDebug_Click"
					/>
			<Button Content="Exit"
					Height="{StaticResource BtnHeight}"
					FontWeight="Bold"
					Click="ButtonExit_Click"
					/>
		</StackPanel>


		<!--  message block  -->
		<TextBlock x:Name="textBlock"
				Grid.Row="1"
				Grid.Column="1"
				Margin="5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				FontFamily="DejaVu Sans Mono"
				Text="{Binding WindowMessage}"
				TextWrapping="Wrap"
				Foreground="White"
				/>

		<!--#region > datagrid-->

		<DataGrid Name="DgFamilyType"
				Grid.Row="0"
				Grid.Column="1"
				Margin="{StaticResource GridBottomMargin}"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				d:DataContext="{Binding Mode=OneWay,
																Source={StaticResource Pm}}"
				AreRowDetailsFrozen="False"
				AutoGenerateColumns="false"

				CanUserAddRows="{Binding CanUserAddRows,
																 FallbackValue=False,
																 Mode=OneWay,
																 Source={StaticResource Pm}}"
				CanUserDeleteRows="{Binding CanUserDeleteColumns,
																		FallbackValue=false,
																		Mode=OneWay,
																		Source={StaticResource Pm}}"
				ColumnReordered="DgFamilyType_ColumnReordered"
				ColumnWidth="Auto"
				DataContext="{Binding Mode=OneWay,
															Source={StaticResource Pm}}"
				EnableColumnVirtualization="False"
				HeadersVisibility="All"
				HorizontalScrollBarVisibility="Visible"
				VerticalScrollBarVisibility="Visible"
				IsSynchronizedWithCurrentItem="True"
				ItemsSource="{Binding Path=ParamMgr.Pd}"
				CellStyle="{StaticResource DataGridCellStyle2}"
				RowStyle="{DynamicResource DgRowStyle1}"
				>
			<DataGrid.Columns>
				<DataGridTextColumn Binding="{Binding ParameterValues[0].ParamValue}">
					<DataGridTextColumn.Header>
						<DataGridColumnHeader Style="{StaticResource DgColHdrStyle}">
							<DataGridColumnHeader.Content>
								<Binding
										Mode="OneWay"
										Path="ParamMgr.Cd.ColumnSpecs[0]"
										TargetNullValue="null"
										/>
							</DataGridColumnHeader.Content>
						</DataGridColumnHeader>
					</DataGridTextColumn.Header>
				</DataGridTextColumn>
			</DataGrid.Columns>
		</DataGrid>

		<!--#endregion-->
	</Grid>
</Window>
